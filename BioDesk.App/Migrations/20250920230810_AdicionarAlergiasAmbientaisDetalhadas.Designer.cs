// <auto-generated />
using System;
using BioDesk.App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BioDesk.App.Migrations
{
    [DbContext(typeof(BioDeskDbContext))]
    [Migration("20250920230810_AdicionarAlergiasAmbientaisDetalhadas")]
    partial class AdicionarAlergiasAmbientaisDetalhadas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BioDesk.App.Models.AssinaturaDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AlturaAssinatura")
                        .HasColumnType("REAL");

                    b.Property<bool>("AssinaturaValida")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConsentimentoInformadoId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("DadosAssinatura")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("DataAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaVerificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("DispositivoUtilizado")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("HashVerificacao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImagemAssinatura")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<double>("LarguraAssinatura")
                        .HasColumnType("REAL");

                    b.Property<int>("NumeroTracos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObservacoesValidacao")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionarioSaudeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("VersaoApp")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaValida");

                    b.HasIndex("ConsentimentoInformadoId");

                    b.HasIndex("DataAssinatura");

                    b.HasIndex("HashVerificacao");

                    b.HasIndex("PacienteId");

                    b.HasIndex("QuestionarioSaudeId");

                    b.HasIndex("TipoDocumento");

                    b.ToTable("AssinaturasDigitais");
                });

            modelBuilder.Entity("BioDesk.App.Models.ConsentimentoInformado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AceitaContactoFisico")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AceitaRiscosAssociados")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssinaturaDigital")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssinaturaQuestionarioCompleto")
                        .HasColumnType("TEXT");

                    b.Property<string>("CaminhoDocumento")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("CompreendeNaturezaTratamento")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsentimentoObtido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConteudoConsentimento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAssinaturaQuestionario")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataConsentimento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("HashVerificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentificacaoProfissional")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("IridologiaAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IridologiaAutorizoCapturaImagens")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IridologiaCompreensoLimitacoes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("IridologiaDataAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IridologiaNaturezaNaoInvasiva")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IridologiaRevogavel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalTratamento")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("MedicinaQuanticaAbordagemComplementar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MedicinaQuanticaAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("MedicinaQuanticaContraindicacoes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MedicinaQuanticaDataAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("MedicinaQuanticaLiberdadeInterromper")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MedicinaQuanticaNaturezaProcedimentos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MedicinaQuanticaPossiveisReacoes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MedicinaQuanticaRevogavel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaturopatiaAlternativasDiscutidas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NaturopatiaAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NaturopatiaAutorizacaoCorresponsabilidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaturopatiaCompreendeNatureza")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NaturopatiaDataAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NaturopatiaInformacaoPatologias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaturopatiaObjetivosExplicados")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaturopatiaRevogavel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaturopatiaRiscosDiscutidos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObservacoesAdicionais")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("OsteopatiaAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("OsteopatiaAutorizoContactoFisico")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OsteopatiaContraindicacoesDiscutidas")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("OsteopatiaDataAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("OsteopatiaPossoInterromper")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OsteopatiaRevogavel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OsteopatiaRiscosExplicados")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OsteopatiaTecnicasExplicadas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PermiteExposicaoAreasCorporais")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("QuestionarioAssinado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RgpdAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RgpdConsentimentoExplicito")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RgpdDataAssinatura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RgpdDireitosAcesso")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RgpdInformacaoResponsavel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RgpdOpcaoNaoMarketing")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RgpdRevogavel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TermosEspecificos")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoTerapia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConsentimentoObtido");

                    b.HasIndex("DataConsentimento");

                    b.HasIndex("PacienteId");

                    b.HasIndex("TipoTerapia");

                    b.ToTable("ConsentimentosInformados");
                });

            modelBuilder.Entity("BioDesk.App.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ComoConheceu")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalHabitual")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Morada")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("NIF")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Profissao")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuemRecomendou")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UltimaConsulta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("Email IS NOT NULL AND Email != ''");

                    b.HasIndex("NIF")
                        .IsUnique()
                        .HasFilter("NIF IS NOT NULL AND NIF != ''");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Cidade = "Lisboa",
                            CodigoPostal = "1000-001",
                            ComoConheceu = "Redes Sociais",
                            DataCriacao = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1985, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao.silva@email.com",
                            EstadoCivil = "Casado(a)",
                            Genero = "Masculino",
                            LocalHabitual = "Chão de Lopes",
                            Morada = "Rua das Flores, 123\n1000-001 Lisboa",
                            NIF = "123456789",
                            NomeCompleto = "João Silva",
                            Profissao = "Engenheiro",
                            Telefone = "912345678",
                            UltimaConsulta = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Cidade = "Porto",
                            CodigoPostal = "4000-002",
                            ComoConheceu = "Recomendação",
                            DataCriacao = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1978, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.santos@email.com",
                            EstadoCivil = "Solteiro(a)",
                            Genero = "Feminino",
                            LocalHabitual = "Samora Correia",
                            Morada = "Avenida Central, 456\n4000-002 Porto",
                            NIF = "987654321",
                            NomeCompleto = "Maria Santos",
                            Profissao = "Professora",
                            QuemRecomendou = "Ana Costa",
                            Telefone = "923456789",
                            UltimaConsulta = new DateTime(2024, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Cidade = "Braga",
                            CodigoPostal = "4700-003",
                            ComoConheceu = "Website/Google",
                            DataCriacao = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1992, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos.ferreira@email.com",
                            EstadoCivil = "União de Facto",
                            Genero = "Masculino",
                            LocalHabitual = "Online",
                            Morada = "Praceta do Sol, 789\n4700-003 Braga",
                            NIF = "456789123",
                            NomeCompleto = "Carlos Ferreira",
                            Profissao = "Designer",
                            Telefone = "934567890",
                            UltimaConsulta = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BioDesk.App.Models.QuestionarioSaude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AcompanhamentoPsicologico")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaAINEs")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaAcaros")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaAdesivos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaAnestesicos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlergiaContactoOutras")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("AlergiaCorticosteroides")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaCosmeticos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaIodoContraste")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaLatex")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaMofo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaNiquel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaOpioides")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaPelosAnimais")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaPenicilina")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaPlantas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaPoeira")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlergiaPolen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlergiasAlimentos")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlergiasAmbientais")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlergiasAmbientaisOutras")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlergiasFarmacosOutros")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlergiasMedicamentos")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlergiasPlantas")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlergiasSupplementos")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("AlertaAneurisma")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlertaCirurgiaRecente")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlertaFraturasRecentes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlertaHipermobilidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlertaOsteoporoseSevera")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlertaSindromesNeurologicas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlertaTumorInfecao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlertasOutros")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Amamentando")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnafilaxiaGatilho")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Anticoagulantes")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("AssinaturaProfissional")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AssinaturaUtente")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutorizacaoContactos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutorizacaoPartilha")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraCancro")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraCorticoides")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraDeficesNeurologicos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraFebre")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraIncontinencia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraPeridaPeso")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BandeiraTrauma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CicloMenstrualDetalhes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Completo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CondicoesCronicas")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConsomeAlcool")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConsumoAlcool")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConsumoCafeina")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsumoRiscoAlcool")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsumoRiscoCannabis")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsumoRiscoJogo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsumoRiscoOutras")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsumoRiscoTabaco")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPreenchimento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaMenstruacao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeclaracaoComplementar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeclaracaoVeracidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DetalhesEstiloVida")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DetalhesProblemasSaude")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosticosDigestivos")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DiagnosticosMedicosAtuais")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("DoencaAVCTIA")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaAsmaDPOC")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaAutoimune")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaCardiopatia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaCoagulacao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaDiabetesTipo1")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaDiabetesTipo2")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaDislipidemia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaEpilepsia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaHepatica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaHipertensao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaOncologia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaOsteoporose")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaRenal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DoencaTiroideia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorATM")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorAnca")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorCervical")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorCotovelo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorDorsal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorJoelho")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorLombar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorOmbro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DorOutrasLocalizacoes")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<bool>("DorPunhoMao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorSacroiliaca")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DorTornozeloPe")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EscalaBristol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExercicioFisico")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExperienciaTerapiasComplementares")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("FrequenciaEvacuacao")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Fuma")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Gravida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GravidezAleitamento")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("HabitosAlimentares")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HipertensaoConhecida")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HistoriaAnafilaxia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HistoricoCirurgias")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricoFamiliar")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricoFraturas")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricoGinecologico")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("HorasSono")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ImplanteDIU")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ImplantePacemaker")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ImplantePlacasParafusos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ImplanteProtesesArticulares")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ImplanteStent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImplantesOutros")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("IntoleranciaAlimentarOutras")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IntoleranciaFrutosSecos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntoleranciaGluten")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntoleranciaLactose")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntoleranciaMarisco")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntoleranciaOvos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntoleranciaProteínaLeite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("JaFezCirurgias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("JaFezTerapiasComplementares")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("JaTeveFraturas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalData")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicacaoAtual")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("MovimentosLimitados")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("NivelDorAtual")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NivelStress")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoAlivioDor")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoAumentarVitalidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoBemEstarGeral")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoGestaoWeight")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoMelhorarDigestao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoMelhorarMobilidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoMelhorarSono")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjetivoOutro")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ObjetivoReduzirStress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObservacoesAdicionais")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoAguda")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoBloqueios")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoCaibras")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoCronica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoFormigueiros")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoFraqueza")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoIrradiacao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PadraoRigidezMatinal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PraticaExercicio")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaAutoimune")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaCicloIrregular")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaDiabetes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaDorPelvica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaEczema")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaEndometriose")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaHiperplasiaProstatica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaHipoHipertiroidismo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaITURecorrentes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaIncontinencia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaInfertilidade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaMenupausa")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaPsoriase")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaSPM")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaSindromeMetabolica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemaUrticaria")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasCardiovasculares")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasDigestivos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasEndocrinos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasMusculoesqueleticos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasNeurologicos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProblemasOutrosDetalhes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ProblemasPele")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasRenais")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProblemasRespiratorios")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfissaoErgonomia")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("QualidadeSono")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuedasUltimoAno")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("QueixaPrincipal")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("RoncoApneia")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SaudeGlobal")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("SegurancaCasaRelacoes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaAlternancia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaAnsiedade")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaApneiaSono")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaAzia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaCefaleias")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaConvulsoes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDepressao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDesmaios")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDiarreia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDispneia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDistensao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDorAbdominal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaDorToracica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaEdemas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaFezesSangue")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaIdeacaoSuicida")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaIntoleranciaEsforco")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaMemoria")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaNauseas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaObstipacao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaPalpitacoes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaPanico")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaPieiraAsma")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaTonturas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaTosseCronica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SintomaVomitos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SintomasAtuais")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("SuplementosFitoterapia")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tabagismo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("TomaMedicacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DataPreenchimento");

                    b.HasIndex("PacienteId");

                    b.ToTable("QuestionariosSaude");
                });

            modelBuilder.Entity("BioDesk.App.Models.AssinaturaDigital", b =>
                {
                    b.HasOne("BioDesk.App.Models.ConsentimentoInformado", "ConsentimentoInformado")
                        .WithMany()
                        .HasForeignKey("ConsentimentoInformadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BioDesk.App.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioDesk.App.Models.QuestionarioSaude", "QuestionarioSaude")
                        .WithMany()
                        .HasForeignKey("QuestionarioSaudeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ConsentimentoInformado");

                    b.Navigation("Paciente");

                    b.Navigation("QuestionarioSaude");
                });

            modelBuilder.Entity("BioDesk.App.Models.ConsentimentoInformado", b =>
                {
                    b.HasOne("BioDesk.App.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("BioDesk.App.Models.QuestionarioSaude", b =>
                {
                    b.HasOne("BioDesk.App.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
